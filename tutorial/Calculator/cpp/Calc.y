/* This Bison file was machine-generated by BNFC */
%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include "Absyn.H"
typedef struct yy_buffer_state *YY_BUFFER_STATE;
int yyparse(void);
int yylex(void);
YY_BUFFER_STATE yy_scan_string(const char *str);
void yy_delete_buffer(YY_BUFFER_STATE buf);
int yy_mylinenumber;
int initialize_lexer(FILE * inp);
int yywrap(void)
{
  return 1;
}
void yyerror(const char *str)
{
  extern char *yytext;
  fprintf(stderr,"error: line %d: %s at %s\n", 
    yy_mylinenumber, str, yytext);
}



static Exp* YY_RESULT_Exp_ = 0;
Exp* pExp(FILE *inp)
{
  yy_mylinenumber = 1;
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}
Exp* pExp(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  yy_mylinenumber = 1;
  initialize_lexer(0);
  buf = yy_scan_string(str);
  result = yyparse();
  yy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}



%}

%union
{
  int int_;
  char char_;
  double double_;
  char* string_;
  Exp* exp_;
}

%token _ERROR_
%token _SYMB_0    //   +
%token _SYMB_1    //   -
%token _SYMB_2    //   *
%token _SYMB_3    //   /
%token _SYMB_4    //   (
%token _SYMB_5    //   )

%type <exp_> Exp
%type <exp_> Exp1
%type <exp_> Exp2

%start Exp
%token<int_> _INTEGER_

%%
Exp : Exp _SYMB_0 Exp1 {  $$ = new EAdd($1, $3); YY_RESULT_Exp_= $$; } 
  | Exp _SYMB_1 Exp1 {  $$ = new ESub($1, $3); YY_RESULT_Exp_= $$; }
  | Exp1 {  $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp1 : Exp1 _SYMB_2 Exp2 {  $$ = new EMul($1, $3); YY_RESULT_Exp_= $$; } 
  | Exp1 _SYMB_3 Exp2 {  $$ = new EDiv($1, $3); YY_RESULT_Exp_= $$; }
  | Exp2 {  $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp2 : _INTEGER_ {  $$ = new EInt($1); YY_RESULT_Exp_= $$; } 
  | _SYMB_4 Exp _SYMB_5 {  $$ = $2; YY_RESULT_Exp_= $$; }
;

